name: Publish package

on:
  push:
    branches:
      - master

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'chore: release v')"
    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      COMMIT_AUTHOR_NAME: ${{ github.event.head_commit.author.name }}
      COMMIT_AUTHOR_EMAIL: ${{ github.event.head_commit.author.email }}

    steps:
      # Clear Cached Git Credentials
      - name: Clear Cached Git Credentials
        run: |
          git config --global --unset credential.helper || true

      # Checkout the repo
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: master
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      # Configure git
      - name: Configure CI Git User
        run: |
          git config --global user.name "$COMMIT_AUTHOR_NAME"
          git config --global user.email "$COMMIT_AUTHOR_EMAIL"

      # Setup Node.js build environment
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          registry-url: 'https://registry.npmjs.org'

      # Cache dependencies
      - name: Cache Dependencies
        uses: actions/cache@v4
        id: cache
        with:
          path: |
            **/node_modules
          key: yarn-${{ hashFiles('**/package.json', 'yarn.lock') }}

      # Install project dependencies
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn

      # Authenticate to NPM
      - name: Authenticate with Registry
        run: |
          npm config set registry https://registry.npmjs.org/
          echo "registry=https://registry.npmjs.org/" >> .npmrc
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> .npmrc

      # Release and publish version
      - name: Release version
        run: GITHUB_TOKEN="${{ secrets.GH_TOKEN }}" NPM_TOKEN="${{ secrets.NPM_TOKEN }}" yarn release --ci --npm.skipChecks
